name: Continuous Build and Test

on:
  push:
    branches-ignore:
      - 'dev'
    paths-ignore:
      # don't need to re-run the build for now if only markdown changes
      - '**/*.md'
      - 'docs/**'
env:
  GODOT_CLI: ./godot/godot.x86_64
defaults:
  run:
    shell: bash

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        godotDownload: ["https://downloads.tuxfamily.org/godotengine/4.1.3/mono/Godot_v4.1.3-stable_mono_linux_x86_64.zip", "https://downloads.tuxfamily.org/godotengine/4.2/mono/Godot_v4.2-stable_mono_linux_x86_64.zip"]
        targetFramework: ["net6.0", "net7.0"]
    name: Build
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          clean: false # we clean what we want to clean ourselves above, and try to keep some cache
          submodules: recursive

      - name: Set Target Framework ${{ matrix.targetFramework }}
        run: |
          sed -i 's|<TargetFramework>.*<|<TargetFramework>'${{ matrix.targetFramework }}'<|g' YarnSpinner-Godot.csproj
      
      - name: Download Godot
        id: downloadGodot
        run: |
          wget -O godot.zip ${{ matrix.godotDownload }}
          unzip godot.zip
          mv ./Godot_v4* ./godot
          touch ./godot/.gdignore
          mv ./godot/*.x86_64 $GODOT_CLI
          
      - name: Build solution
        id: buildSolution
        run: |
          $GODOT_CLI --headless --path . --verbose -q -e --build-solutions --quit 
          # sometimes --build-solutions still exits with code 0, so double check
          dotnet build
        timeout-minutes: 2